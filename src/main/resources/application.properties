# debug=true
spring.jmx.enabled=false
spring.jta.enabled=false
#spring.autoconfigure.exclude=
spring.profiles.active=production
logging.file.name=Sender.HE-4349.log
logging.logback.rollingpolicy.total-size-cap=999MB
logging.logback.rollingpolicy.max-history=20
logging.logback.rollingpolicy.max-file-size=100MB
#-------------------раскоментаришь -> убивает!----------logging.pattern.rolling-file-name=${LOG_FILE}.%d_{yyyy-MM-dd}.%i.gz
# --- Убрали Актуатор
#management.server.port=8081
#management.endpoint.configprops.enabled=true
#management.endpoints.web.base-path=/actuator
#management.endpoints.web.exposure.include=hawtio,jolokia
#management.endpoints.enabled-by-default=true
#management.endpoints.web.cors.allow-credentials=true
#management.endpoint.health.enabled=true
#management.endpoint.jolokia.enabled=true
#hawtio.authenticationEnabled=false
# management.endpoint.jolokia.
# spring.devtools.add-properties=false
logging.file.path=./
spring.main.allow-circular-references=true
spring.freemarker.checkTemplateLocation=false
###spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.SecurityAutoConfiguration
spring.security.user.name=user
spring.security.user.password=password
# spring.security.user.roles=USER
spring.application.name=SenderApplication
server.port=8778
server.http2.enabled=false
server.forward-headers-strategy=native
server.jetty.accesslog.format=extended_ncsa
server.jetty.accesslog.retention-period=1
server.jetty.accesslog.file-date-format=dd/MMM/yyyy HH:mm:ss MSK
server.jetty.threads.max=30
server.jetty.accesslog.enabled=false
server.jetty.accesslog.filename=./access.log
server.jetty.accesslog.append=false
server.max-http-request-header-size=81920
server.jetty.max-http-response-header-size=81920
#log4j2.formatMsgNoLookups export LOG4J_FORMAT_MSG_NO_LOOKUPS=true
#telegramm.chat-bot-url=
telegramm.chat-bot-url=https://api.telegram.org/bot7295809798:AAHyHSmnzQtdnDMJ-v4HunCupJMNrSrJ5_g/sendMessage?chat_id=-1002196991690&text=
#https://api.telegram.org/bot1450268713:AAGMgWJ1ET91dvY5KofxNfXJBRJ_iFpTqZo/sendMessage?chat_id=-1001328897633&text=
#spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver
#spring.datasource.driver-class-name=org.postgresql.Driver
# # spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, \
# # org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, \
# # org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration
spring.datasource.url=jdbc:postgresql://localhost:5432/postgres?currentSchema=mySchema&ApplicationName=Sender
security.hermes-login=login
security.hermes-password=password
#for instance of cuber sequence 1,2,3,...9
hermes.cuber-num-id=0
#extsys
hermes.extsys-point=jdbc:postgresql://localhost:5432/extDb?currentSchema=extSchema&ApplicationName=Sender
hermes.extsys-db-schema=etc_schema
hermes.extsys-db-login=ext_login
hermes.extsys-db-passwd=ext_passwd#
hermes.extsys-pg-setup-connection=set SESSION time zone 3; set enable_bitmapscan to off; set max_parallel_workers_per_gather = 0;
#
hermes.hrms-point=jdbc:postgresql://localhost:5432/postgres?currentSchema=mySchema&ApplicationName=Sender
hermes.hrms-db-schema=orm_schema
hermes.hrms-db-login=orm_login
#hermes.hrms-db-passwd=Bewner4Grad+
hermes.hrms-db-passwd=orm_passwd#
hermes.hrms-pg-setup-connection=set SESSION time zone 3; set enable_bitmapscan to off; set max_parallel_workers_per_gather = 0;
#
hermes.long-retry-count=5
hermes.long-retry-interval=180
hermes.short-retry-count=2
hermes.short-retry-interval=30
hermes.total-num-tasks=3
#
taskpool.core-pool-size=20
taskpool.max-pool-size=50
# Interval in seconds between calls to the queue in the database to read events to send
hermes.wait-time-scan=60
# The number of records that the thread takes from the queue in one run
hermes.num-message-in-scan=2
# REST request response timeout to local PHP API
hermes.api-rest-wait-time=120
# Interval in seconds between system configuration update - Message Types - Templates
hermes.interval-re-init=30
# This is if you push it behind out
# hermes.first-info-stream-id=502 122- Express.URAL
hermes.first-info-stream-id=101
hermes.total-time-tasks=2000000000
# HE-5467 It is necessary to ensure the processing of RECEPTION of responses to OUTGOING events to initiate a call to the application handler in case of any errors and failures of the external system during integration
#hermes.psql-function-run={? = call orm.x_Message$_Z_Clear_Soap_Messages( 60, 900 )}
hermes.connect-msg-bus=tcp://0.0.0.0:61116
#
spring.activemq.broker-url=vm://embedded?broker.persistent=false,useShutdownHook=false,useJmx=false
spring.activemq.close-timeout=25000
spring.activemq.in-memory=true
spring.activemq.non-blocking-redelivery=false
spring.activemq.password=admin
spring.activemq.user=admin
spring.activemq.send-timeout=0
spring.activemq.packages.trust-all=false
spring.activemq.packages.trusted=com.memorynotfound
spring.activemq.pool.block-if-full=true
spring.activemq.pool.block-if-full-timeout=-1
#spring.activemq.pool.create-connection-on-startup=true
spring.activemq.pool.enabled=false
#spring.activemq.pool.expiry-timeout=0
spring.activemq.pool.idle-timeout=30000
spring.activemq.pool.max-connections=100
#spring.activemq.pool.maximum-active-session-per-connection=500
#spring.activemq.pool.reconnect-on-exception=true
spring.activemq.pool.time-between-expiration-check=-1
spring.activemq.pool.use-anonymous-producers=true
# ORACLE
#monitoring.jdbc-url=jdbc:postgresql://localhost:5432/postgres
monitoring.jdbc-url=jdbc:postgresql://localhost:5432/postgres
#monitoring.data-source-class-name=oracle.jdbc.pool.OracleDataSource
monitoring.data-source-class-name=org.postgresql.ds.PGSimpleDataSource
monitoring.mntr-db-login=login
monitoring.mntr-db-passwd=passwd
monitoring.data-store-table-name="TS_DWH".message_queue
#
monitoring.total-num-tasks=0
monitoring.wait-time-scan=100000
monitoring.queue-copasity=9200
